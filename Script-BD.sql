CREATE TABLE ORDERS(
	ID NUMBER PRIMARY KEY NOT NULL,
	STATUS NVARCHAR2(20) CONSTRAINT CHECK_STATUS_ORDER CHECK(STATUS IN('CREATED', 'IN_TRANSIT', 'DELIVERED', 'CANCELLED')) NOT NULL,
	ORIGIN NVARCHAR2(50),
	DESTINATION NVARCHAR2(50),
	CREATED_AT DATE,
	UPDATED_AT DATE
);

SELECT * FROM ORDERS;

INSERT INTO ORDERS (ID, STATUS, ORIGIN, DESTINATION, CREATED_AT, UPDATED_AT)
VALUES (1, 'CREATED', 'Ciudad de México', 'Guadalajara', SYSTIMESTAMP, SYSTIMESTAMP);

INSERT INTO ORDERS (ID, STATUS, ORIGIN, DESTINATION, CREATED_AT, UPDATED_AT)
VALUES (2, 'IN_TRANSIT', 'Monterrey', 'Tijuana', SYSTIMESTAMP, SYSTIMESTAMP);

INSERT INTO ORDERS (ID, STATUS, ORIGIN, DESTINATION, CREATED_AT, UPDATED_AT)
VALUES (3, 'DELIVERED', 'Puebla', 'Querétaro', TO_TIMESTAMP('2025-07-20 10:30:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-07-21 12:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO ORDERS (ID, STATUS, ORIGIN, DESTINATION, CREATED_AT, UPDATED_AT)
VALUES (4, 'CANCELLED', 'Toluca', 'León', TO_TIMESTAMP('2025-07-15 09:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2025-07-15 15:00:00', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO ORDERS (ID, STATUS, ORIGIN, DESTINATION, CREATED_AT, UPDATED_AT)
VALUES (5, 'CREATED', 'Hermosillo', 'Mérida', SYSTIMESTAMP, SYSTIMESTAMP);



CREATE TABLE DRIVERS(
	ID NUMBER PRIMARY KEY NOT NULL,
	NAME NVARCHAR2(50) NOT NULL,
	LICENSE NVARCHAR2(50) NOT NULL,
	ACTIVE NVARCHAR2(5) CONSTRAINT CHECK_ACTIVE_DRIVER CHECK(ACTIVE IN ('true', 'false'))
);

SELECT * FROM DRIVERS;

INSERT INTO DRIVERS (ID, NAME, LICENSE, ACTIVE)
VALUES (1, 'Juan Pérez', 'LIC123456', 'true');

INSERT INTO DRIVERS (ID, NAME, LICENSE, ACTIVE)
VALUES (2, 'María Gómez', 'LIC789012', 'true');

INSERT INTO DRIVERS (ID, NAME, LICENSE, ACTIVE)
VALUES (3, 'Carlos Hernández', 'LIC345678', 'false');

INSERT INTO DRIVERS (ID, NAME, LICENSE, ACTIVE)
VALUES (4, 'Laura Martínez', 'LIC901234', 'true');

INSERT INTO DRIVERS (ID, NAME, LICENSE, ACTIVE)
VALUES (5, 'Pedro Sánchez', 'LIC567890', 'false');



CREATE TABLE ORDER_ASSIGNMENTS(
	ID NUMBER PRIMARY KEY NOT NULL,
	ORDER_ID NUMBER NOT NULL,
	DRIVER_ID NUMBER NOT NULL,
	PDF_PATH NVARCHAR2(260),
	IMAGE_PATH NVARCHAR2(260)
);

SELECT * FROM ORDER_ASSIGNMENTS;


-- Crear secuencia para generar IDs automáticos
CREATE SEQUENCE ORDER_ASSIGNMENTS_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE
NOCYCLE;

-- Crear trigger que asigna el siguiente valor de la secuencia al insertar
CREATE OR REPLACE TRIGGER ORDER_ASSIGNMENTS_BI
BEFORE INSERT ON ORDER_ASSIGNMENTS
FOR EACH ROW
BEGIN
  IF :NEW.ID IS NULL THEN
    SELECT ORDER_ASSIGNMENTS_SEQ.NEXTVAL INTO :NEW.ID FROM dual;
  END IF;
END;
/
